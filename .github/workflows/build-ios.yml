name: Build unsigned iOS IPA

on:
  push:
    branches: [main]        # trigger on pushes to main
  workflow_dispatch:        # manual “Run workflow” button

jobs:
  ios:
    runs-on: macos-13       # Intel runner – setup-haxe is happiest here

    steps:
    # 1 / check out your repo
    - uses: actions/checkout@v4

    # 2 / install Haxe + Neko
    - uses: krdlab/setup-haxe@v1
      with:
        haxe-version: 4.3.4    # keep this in sync with your local version

    # 3 / cache the haxelib folder to speed up repeated runs
    - name: Cache haxelib
      uses: actions/cache@v4
      with:
        path: ~/haxelib
        key: ${{ runner.os }}-haxelib-${{ hashFiles('haxelib.json') }}
        restore-keys: |
          ${{ runner.os }}-haxelib-

    # 4 / install every library the project needs
    - name: Install OpenFL + Flixel stack
      run: |
        haxelib setup ~/haxelib
        haxelib install lime --quiet
        haxelib install openfl --quiet
        haxelib install flixel --quiet
        haxelib install flixel-addons --quiet   # comment out if unused
        haxelib install flixel-ui --quiet       # comment out if unused
        haxelib run lime setup -y
        haxelib run lime setup flixel -y        # templates & tools

    # 5 / compile for iOS (release, unsigned)
    - name: Build unsigned .app
      run: |
        haxelib run lime build ios -release -nosign

    # 6 / zip Payload → .ipa
    - name: Package unsigned IPA
      run: |
        APP=$(find Export/ios/build/Release-iphoneos -name '*.app' -maxdepth 1 | head -n1)
        mkdir Payload
        cp -R "$APP" Payload/
        zip -r -y unsigned.ipa Payload

    # 7 / upload the artifact
    - uses: actions/upload-artifact@v4
      with:
        name: unsigned-ipa
        path: unsigned.ipa
