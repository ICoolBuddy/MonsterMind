name: Build unsigned iOS IPA
on:
  workflow_dispatch:
  push: { branches: [main] }

jobs:
  ios:
    runs-on: macos-13          # see note above
    steps:
      - uses: actions/checkout@v4

      # 1 / install Haxe + Neko on the runner
      - uses: krdlab/setup-haxe@v1          # GitHub-marketplace action
        with:
          haxe-version: 4.3.4               # pick the version you use locally
      # the action automatically puts Haxe + Neko on PATH :contentReference[oaicite:3]{index=3}

      # 2 / install Haxelib deps the same way you do locally
      - name: Install OpenFL tool-chain
        run: |
          haxelib setup ~/haxelib
          haxelib install lime --quiet
          haxelib install openfl --quiet
          haxelib install hxcpp --quiet
          haxelib run lime setup -y
          haxelib run openfl setup -y

      # 3 / compile for iOS WITHOUT signing
      - name: Build .app bundle
        run: |
          haxelib run lime build ios -release -nosign   # <-- the magic switch
      # the same flag is used in real-world GH runs :contentReference[oaicite:4]{index=4}
      # (OpenFL internally calls xcodebuild with CODE_SIGNING_ALLOWED=NO)

      # 4 / wrap the .app into an .ipa
      - name: Package unsigned IPA
        run: |
          APP=$(find Export/ios/build/Release-iphoneos -name '*.app' -maxdepth 1 | head -n1)
          mkdir Payload
          cp -R "$APP" Payload/
          zip -r -y unsigned.ipa Payload       # classic Payload.zip trick
      # the Payload→zip→rename trick is the canonical manual approach :contentReference[oaicite:5]{index=5}

      # 5 / expose the artifact
      - uses: actions/upload-artifact@v4
        with:
          name: unsigned-ipa
          path: unsigned.ipa
