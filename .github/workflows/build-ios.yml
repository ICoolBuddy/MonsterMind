name: Build unsigned iOS IPA

on:
  push:
    branches: [main]           # run on every push to main
  workflow_dispatch:           # plus the manual button

jobs:
  ios:
    runs-on: macos-13          # Intel runner – setup-haxe works here

    steps:
    # 1 ▸ check out your repo
    - uses: actions/checkout@v4

    # 2 ▸ install Haxe + Neko
    - uses: krdlab/setup-haxe@v1
      with:
        haxe-version: 4.3.4

    # 3 ▸ cache haxelib folder
    - uses: actions/cache@v4
      with:
        path: ~/haxelib
        key: ${{ runner.os }}-haxelib-${{ hashFiles('haxelib.json') }}
        restore-keys: ${{ runner.os }}-haxelib-

    # 4 ▸ install libraries
    - name: Install OpenFL + Flixel stack
      run: |
        haxelib setup ~/haxelib
        haxelib install lime --quiet
        haxelib install openfl --quiet
        haxelib install flixel --quiet
        haxelib install flixel-addons --quiet   # comment out if unused
        haxelib install flixel-ui --quiet       # comment out if unused
        haxelib run lime setup -y
        haxelib run lime setup flixel -y

    # 5 ▸ build Release, unsigned
    - name: Build unsigned .app
      run: |
        haxelib run lime build ios -release -nosign

    # 6 ▸ package Payload → unsigned.ipa
    - name: Package unsigned IPA
      run: |
        APP=$(find Export/ios/build/Release-iphoneos -name '*.app' -maxdepth 1 | head -n1)
        mkdir Payload
        cp -R "$APP" Payload/
        zip -r -y unsigned.ipa Payload

    # 7 ▸ **zip the matching dSYM** (NEW)
    - name: Collect & zip dSYM
      run: |
        DSYM=$(find Export/ios/build/Release-iphoneos -name '*.dSYM' -maxdepth 1 | head -n1)
        if [ -z "$DSYM" ]; then
          echo "❌  No dSYM found – build must have failed"; exit 1
        fi
        zip -r -y MonsterMind.dSYM.zip "$DSYM"

    # 8 ▸ upload both IPA and dSYM
    - uses: actions/upload-artifact@v4
      with:
        name: unsigned-ios-build
        path: |
          unsigned.ipa
          MonsterMind.dSYM.zip
        retention-days: 7
